---
title: "Technical Modules"
format: html
---

Technical lessons aim to teach and practice a specific data science tool. The format generally combines lecture to introduce concepts, live coding and hand-on practice sessions. Here we provide a list with a short description of our current technical offerings. The specific goals of each of these lessons can be adapted to best fit your team and meet all participants where they are. If you are interested in a topic that is not on this list, please let us know and we are happy to discuss the feasibility of creating new materials.


For all of these lessons participants will need a computer with recent versions of R and RStudio installed. Check out instructions to install or upgrade R and RStudio [here](https://happygitwithr.com/install-r-rstudio.html).


## Introduction to programming in R using RStudio
New to R? This lesson walks through the basic concepts of the R programming language. It is a gentle introduction to working with R using the RStudio interface. The goal is to become familiarize with how the R language works as the starting point to learn more in depth technique to advance your science.

-   **Prerequisites:** None

-   **Learning Goals:**

    1.  Get familiarize with RStudio interface
    2.  Learn the basics of R syntax (functions, packages, objects, vectors, assignment operator)
    3.  Understand the difference between a script and the console
    4.  Create and inspect vectors, identifying their class, content and structure
    5.  Read and inspect data in R and understand the data structure
    6.  Apply basic mathematical operations with values in a data table

-   **Duration:** 2 hours

## Literate Analysis with Quarto
More often than not computational analysis is written in a way that is borderline incomprehensible even to the person who originally wrote the code. Quarto is a tool that allows you to combine prose with code. This way be able to do analysis and write reports all in one place. This course introduces the concept of literate analysis and explores the main functionalities of a Quarto document combining R, the programming language, and markdown, a set of text formatting directives.



-   **Prerequisites:**

    -   Basic knowledge about R and RStudio.
    -   If you are new to R consider taking our Intro to programming in R using RStudio lesson.

-   **Learning Goals:**

    1.  Introduce Quarto as a tool for literate analysis
    2.  Learn markdown syntax and run R code in Quarto
    3.  Understand the "environments" and file paths when working with Quarto documents

-   **Duration:** 2 hours

## Cleaning and Wrangling Data I

-   **Prerequisites:**

    -   Basic knowledge about R and RStudio.
    -   If you are new to R consider taking our Intro to programming in R using RStudio lesson.

-   **Learning Goals:**

    1.  Understand the basics of data wrangling conceptually
    2.  Introduce `dplyr` and `tidyr` functions to clean and wrangle data for analysis
    3.  Learn about the pipe operator as a tool to pass on argument(s) through a sequence of functions

-   **Duration:** 2 hours

## Cleaning and Wrangling Data II

-   **Prerequisites:**

    -   Basic knowledge about R and RStudio
    -   Familiarity with the packages `dyplr` and `tidyr`
    -   General understanding of cleaning and wrangling data

-   **Learning Goals:**

    1.  Introduce advanced data wrangling techniques
    2.  Learn how to best use `dplyr` functions to solve data cleaning challenges
    3.  Discuss common syntax mistakes when wrangling data

-   **Duration:** 2 hours

## Intro to data Visualization

-   **Prerequisites:**

    -   Basic knowledge about R and RStudio
    -   Familiarity with the packages `dyplr` and `tidyr`

-   **Learning Goals:**

    1.  Introduce the basics of the `ggplot2` package to create static plots
    2.  Understand how to use `ggplot2`'s theme abilities to create publication-grade graphics
    3.  Learn the basics of the leaflet package to create interactive maps

-   **Duration:** 2 hours

## Advanced Data Visualization

-   **Prerequisites:**
    -   Basic knowledge about R and RStudio
    -   Familiarity with the packages `dyplr`, `tidyr` and `ggplot2`
-   **Learning Goals:**
-   **Duration:**

## Introduction to Shiny (Dashboards)
-   **Prerequisites**

-   **Learning Goals**



## Reproducible papers

-   **Prerequisites:** - Basic knowledge about R and RStudio - Familiarity with Rmarkdown

-   **Learning Goals:**

    1.  Introduce the concept of reserach compendium
    2.  Learn how to use R to package your work by building a reproducible paper in RMarkdown

-   **Duration:**

## Using `sf` for Spatial Data

-   **Prerequisites:**

    -   Basic knowledge about R and RStudio
    -   Familiarity with the packages `dyplr`, `tidyr` and `ggplot2`

-   **Learning Goals:**

    1.  Undestand how to use the `sf` package to wrangle spatial data
    2.  Introduce static mapping with `ggplot`
    3.  Create customized interactive maps with `leaflet`

-   **Duration:**

## Text Analysis in R

-   **Prerequisites:**

    -   Basic knowledge about R and RStudio
    -   Familiarity with the packages `dyplr`, `tidyr` and `ggplot2`

-   **Learning Goals:**

    1.  What a token is and how they are used
    2.  How to use stop words
    3.  How to customize stop words
    4.  How to give structure to unstructured text

-   **Duration:** 2 hours

## Creating R Functions
-   **Prerequisites**

-   **Learning Goals**

## Creating an R Package

-   **Prerequisites**

-   **Learning Goals**



## Working with Git and GitHub

-   **Prerequisites:**
    -   Have a GitHub account (you can sign up at [github.com](github.com))
    -   Familiarity with R and RStudio
    
-   **Learning Goals:**

    1. Why Git is useful for reproducible analysis 
    2. Learn the basics of Git and GitHub to track changes of your project
    3. Practice the Git workflow: pull, stage, commit,pull, push through RStudio
    4. Setting up a Git repository using different workflows

-   **Duration:** 2 hours

## Collaborating using Git and GitHub

-   **Prerequisites:**
    -   Have a GitHub account (you can sign up at [github.com](github.com))
    -   Familiarity with Git and GitHub
    -   Be comfortable using R and RStudio
    
-   **Learning Goals:**

    1. Learn how to use Git and GitHub to collaborate with colleagues on code
    2. Identify what can cause conflicts when collaborating
    3. Walk-though how to resolve a conflict
    4. Revise workflows to avoid conflicts

-   **Duration**

## GitHub Workflows: Pull Request, Branches and Forks

-   **Prerequisites:**
    -   Have a GitHub account (you can sign up at [github.com](github.com))
    -   Familiarity collaborating using Git and GitHub
    -   Be comfortable using R and RStudio

-   **Learning Goals:**

    1.Become familiar with additional mechanisms to collaborate using Git
    2.Contribute code to a colleagueâ€™s repository using Pull Requests

-   **Duration:** 2 hours

## GitHub for project management

-   **Prerequisites:**
    -   Have a GitHub account (you can sign up at [github.com](github.com))
    -   Familiarity with GitHub
    
-   **Learning Goals:**

    1. Learn about issues in GitHub
    2. Projecs
    3. Informative READMEs
    
-   **Duration:** 2 hours

## Publishing your Analysis to the web

-   **Prerequisites:**
    -   Have a GitHub account (you can sign up at [github.com](github.com))
    -   Familiarity with GitHub
    -   Be comfortable using R and RStudio

-   **Learning Goals:**

    1. Set up Git, GitHub (+Pages), and R Markdown to publish an analysis to the web
    
-   **Duration:** 1 hour
